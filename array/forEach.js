/**
 * O mÃ©todo forEach() Ã© uma Ã³tima forma de se percorrer arrays em Javascript.
 * Vou mostrar alguns exemplos de uso dessa funÃ§Ã£o nessa thread.
 * 
 * De inÃ­cio, Ã© importante dizer que o mÃ©todo forEach() nÃ£o sÃ³ percorre o array,
 * como tambÃ©m retorna o conteÃºdo do elemento, o Ã­ndice do elemento e o prÃ³prio
 * array a cada iteraÃ§Ã£o, nessa ordem.
 * 
 * Array usado nos exemplos:
 */
const pessoas = ['JoÃ£o', 'Maria', 'Pedro', 'Roberto']

/**
 * No exemplo a seguir, definimos uma funÃ§Ã£o anÃ´nima tradicional e "inline", ou
 * seja, ela Ã© definida no momento em que Ã© passada como parÃ¢metro para o 
 * forEach(). Ela Ã© uma "callback function", assunto iniciado nessa thread:
 * https://twitter.com/ronaldocoding/status/1446679608955445257?s=20
 */

/**
 * Sendo assim, a cada iteraÃ§Ã£o de elementos do array "pessoas", a funÃ§Ã£o Ã© 
 * chamada e uso os retornos do forEach() para nos mostrar trÃªs informaÃ§Ãµes:
 * o conteÃºdo do elemento iterado, o Ã­ndice do elemento iterado e o prÃ³prio 
 * array:
 */

pessoas.forEach(function(nome, indice, array) {
    console.log(`${indice + 1}: ${nome}`)
    console.log(array)
})

// 1: JoÃ£o
// [ 'JoÃ£o', 'Maria', 'Pedro', 'Roberto' ]
// 2: Maria
// [ 'JoÃ£o', 'Maria', 'Pedro', 'Roberto' ]
// 3: Pedro
// [ 'JoÃ£o', 'Maria', 'Pedro', 'Roberto' ]
// 4: Roberto
// [ 'JoÃ£o', 'Maria', 'Pedro', 'Roberto' ]

/**
 * No prÃ³ximo exemplo fazemos algo mais simples: passamos como parÃ¢metro do
 * forEach() uma arrow function, assunto iniciado na thread abaixo, que imprime
 * o conteÃºdo de cada elemento iterado: 
 * https://twitter.com/ronaldocoding/status/1445223844361510917?s=20
 */

pessoas.forEach(nome => console.log(nome))

// JoÃ£o
// Maria
// Pedro
// Roberto

/**
 * E, como Ãºltimo exemplo, armazenamos uma funÃ§Ã£o anÃ´nima tradicional em uma 
 * constante e a passamos como parÃ¢mtro do forEach(). Essa funÃ§Ã£o faz algo 
 * simples: mostra uma pequena mensagem, a cada elemento iterado, usando o 
 * conteÃºdo e o Ã­ndice dos elementos:
 */

const exibirPessoas = function(nome, indice) {
    console.log(`${indice + 1}Âª pessoa: ${nome}`)
}

pessoas.forEach(exibirPessoas)

// 1Âª pessoa: JoÃ£o
// 2Âª pessoa: Maria
// 3Âª pessoa: Pedro
// 4Âª pessoa: Roberto

/**
 * Obs: Ã© importante ressaltar que o forEach() retorna o conteÃºdo, o Ã­ndice e o
 * array Ã  callback function NESSA ORDEM. Ou seja, se vocÃª quiser usar apenas o
 * Ã­ndice, vai ter que usar uma callback function que tenha dois parÃ¢metros: um
 * para receber o conteÃºdo, que vocÃª nÃ£o quer usar, e outro para receber o 
 * Ã­ndÃ­ce, que esse sim vocÃª quer usar.
 */

pessoas.forEach((nome, indice) => console.log(indice))

// 0
// 1
// 2
// 3

/**
 * CÃ³digo das threads: https://github.com/ronaldocoding/estudos-js
 * 
 * AtÃ© amanhÃ£ ğŸ¥¶ğŸ¥¶ğŸ¥¶
 */