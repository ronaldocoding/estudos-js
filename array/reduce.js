/**
 * A funÃ§Ã£o reduce() percorre um array com o intuito de extrair dele uma 
 * informaÃ§Ã£o, seja a quantidade de alguma coisa, algo que cada elemento do 
 * array tem, etc. (Ela um pouquinho complicada de entender ðŸ¥¶)
 * 
 * reduce() aceita como primeiro parÃ¢metro uma callback function, assim com os
 * mÃ©todos apresentados nas Ãºltimas threads,  e um valor opcional como segundo
 * parÃ¢metro, que indica o valor inicial de um acumulador, por exemplo.
 * 
 * Essa callback function recebe quatro parÃ¢metros de reduce(): "acumulador", 
 * valor inicial (ou o valor do callback anterior), "valor atual", o valor do 
 * elemento atual, "Ã­ndice", o Ã­ndice atual e o prÃ³prio array.
 * 
 * Como primeiro exemplo, vamos contar o nÃºmero de aprovados de um array de
 * alunos.
 */

// Esse Ã© o nosso array de objetos:
const alunos = [
    { nome: 'Joao', nota: 3.1 },
    { nome: 'Maria', nota: 9.3 },
    { nome: 'Pedro', nota: 5.4 },
    { nome: 'Carlos', nota: 7.9 },
    { nome: 'Agata', nota: 8.1 }
]

/**
 * Vamos criar uma callback function que acumula o nÃºmero de alunos aprovados:
 */
const contaAprovado = (acm, atual) => {
    acm += 1
    if (atual.nota < 6.0) {
        acm -= 1
    }
    return acm
}

/**
 * Por fim usamos o mÃ©todo reduce() passando a nossa callback function, e 
 * definimos o nÃºmero de aprovados inicial como 0 (zero):
 */
const qtdAprovados = alunos
    .reduce(contaAprovado, 0)
console.log(qtdAprovados)

// 3

/**
 * Dessa forma, reduce() percorre o array e para cada elemento dele, ou seja, 
 * para cada objeto, ele chama a funÃ§Ã£o "contaAprovado" que controla o 
 * acumulador do nÃºmero de aprovados e passa esse acumulador para a prÃ³xima 
 * iteraÃ§Ã£o. No caso, acima, o valor retornado pelo mÃ©todo Ã© 3 (trÃªs aprovados).
 * 
 * Essa aqui ficou mal explicada galerinha ðŸ¥¶ðŸ¥¶ðŸ¥¶ðŸ¥¶. Recomendo o site da 
 * mozilla para melhor entendimento: 
 * https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce
 * 
 * CÃ³digo das threads: https://github.com/ronaldocoding/estudos-js
 * 
 * AtÃ© amanhÃ£ ðŸ¥¶ðŸ¥¶ðŸ¥¶
 */